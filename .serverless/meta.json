{
  "C:\\Users\\centu\\Documents\\proyects\\nest\\prueba-tecnica1": {
    "versionSfCore": null,
    "versionFramework": "4.4.7",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "universidadnt",
            "app": "pruebas",
            "service": "pruebaTecnica",
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "environment": {
                "TABLE_NAME": "pruebaTecnica-table"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:Scan"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:982081073415:table/pruebaTecnica-table"
                }
              ],
              "stage": "dev",
              "region": "us-east-1",
              "versionFunctions": true
            },
            "functions": {
              "main": {
                "handler": "dist/serverless.handler",
                "timeout": 30,
                "events": [
                  {
                    "http": {
                      "method": "ANY",
                      "path": "/"
                    }
                  },
                  {
                    "http": {
                      "method": "ANY",
                      "path": "{proxy+}"
                    }
                  }
                ]
              }
            },
            "package": {
              "exclude": [
                "src/**",
                "tests/**",
                ".gitignore",
                ".git/**",
                "README.md",
                "package-lock.json",
                "tsconfig.json",
                "yarn.lock"
              ]
            },
            "resources": {
              "Resources": {
                "StarWarsTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "pruebaTecnica-table",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                }
              }
            },
            "build": {
              "esbuild": false
            },
            "plugins": [
              "serverless-offline"
            ]
          },
          "configFileDirPath": "C:\\Users\\centu\\Documents\\proyects\\nest\\prueba-tecnica1",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:self",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\centu\\Documents\\proyects\\nest\\prueba-tecnica1",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "universidadnt",
      "app": "pruebas",
      "service": "pruebaTecnica",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "environment": {
          "TABLE_NAME": "pruebaTecnica-table"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:PutItem",
              "dynamodb:GetItem",
              "dynamodb:Scan"
            ],
            "Resource": "arn:aws:dynamodb:us-east-1:982081073415:table/pruebaTecnica-table"
          }
        ],
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true
      },
      "functions": {
        "main": {
          "handler": "dist/serverless.handler",
          "timeout": 30,
          "events": [
            {
              "http": {
                "method": "ANY",
                "path": "/"
              }
            },
            {
              "http": {
                "method": "ANY",
                "path": "{proxy+}"
              }
            }
          ]
        }
      },
      "package": {
        "exclude": [
          "src/**",
          "tests/**",
          ".gitignore",
          ".git/**",
          "README.md",
          "package-lock.json",
          "tsconfig.json",
          "yarn.lock"
        ]
      },
      "resources": {
        "Resources": {
          "StarWarsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "pruebaTecnica-table",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        }
      },
      "build": {
        "esbuild": false
      },
      "plugins": [
        "serverless-offline"
      ]
    },
    "serviceRawFile": "\r\norg: universidadnt\r\napp: pruebas\r\nservice: pruebaTecnica\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  environment:\r\n    TABLE_NAME: ${self:service}-table\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:PutItem\r\n        - dynamodb:GetItem\r\n        - dynamodb:Scan\r\n      Resource: 'arn:aws:dynamodb:us-east-1:982081073415:table/${self:provider.environment.TABLE_NAME}'\r\n\r\nfunctions:\r\n  main:\r\n    handler: dist/serverless.handler\r\n    timeout: 30\r\n    events:\r\n      - http:\r\n          method: ANY\r\n          path: /\r\n      - http:\r\n          method: ANY\r\n          path: '{proxy+}'\r\n\r\npackage:\r\n  exclude:\r\n    - src/**\r\n    - tests/**\r\n    - .gitignore\r\n    - .git/**\r\n    - README.md\r\n    - package-lock.json\r\n    - tsconfig.json\r\n    - yarn.lock\r\nresources:\r\n  Resources:\r\n    StarWarsTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:provider.environment.TABLE_NAME}\r\n        AttributeDefinitions:\r\n          - AttributeName: id\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: id\r\n            KeyType: HASH\r\n        BillingMode: PAY_PER_REQUEST\r\nbuild:\r\n  esbuild: false\r\n\r\nplugins:\r\n  - serverless-offline",
    "command": [
      "offline"
    ],
    "options": {},
    "error": {
      "message": "Serverless plugin \"serverless-offline\" not found. Make sure it's installed and listed in the \"plugins\" section of your serverless config file. Use the --debug flag to learn more.",
      "stack": "ServerlessError2: Serverless plugin \"serverless-offline\" not found. Make sure it's installed and listed in the \"plugins\" section of your serverless config file. Use the --debug flag to learn more.\n    at PluginManager.resolveServicePlugins (file:///C:/Users/centu/.serverless/releases/4.4.7/package/dist/sf-core.js:953:2671)\n    at async PluginManager.loadAllPlugins (file:///C:/Users/centu/.serverless/releases/4.4.7/package/dist/sf-core.js:953:1293)\n    at async Serverless.init (file:///C:/Users/centu/.serverless/releases/4.4.7/package/dist/sf-core.js:960:9930)\n    at async runFramework (file:///C:/Users/centu/.serverless/releases/4.4.7/package/dist/sf-core.js:983:1262)\n    at async route (file:///C:/Users/centu/.serverless/releases/4.4.7/package/dist/sf-core.js:1011:14772)\n    at async Object.run2 [as run] (file:///C:/Users/centu/.serverless/releases/4.4.7/package/dist/sf-core.js:1011:15173)\n    at async run3 (file:///C:/Users/centu/.serverless/releases/4.4.7/package/dist/sf-core.js:1011:16435)",
      "code": "PLUGIN_NOT_FOUND"
    },
    "params": {},
    "machineId": "d187b35d47690b8f5a1e540c2f65c38c",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "fac35fbf-7f0f-470f-8461-74d53df307ff",
    "orgName": "universidadnt",
    "userId": "rMywBRRYST15sx91nY",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "6mp9JNRjMKhdFBJkc7",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "universidadnt",
    "subscription": null,
    "userEmail": "centurionjaime@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "982081073415",
    "projectType": "traditional",
    "versionSf": "4.4.7",
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:982081073415:stack/pruebaTecnica3-dev/eef0af20-9312-11ef-a1b8-1256e5c7f4a7",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:982081073415:stack/pruebaTecnica3-dev/eef0af20-9312-11ef-a1b8-1256e5c7f4a7",
    "serviceProviderAwsCfStackCreated": "2024-10-25T20:51:40.034Z",
    "serviceProviderAwsCfStackUpdated": "2024-10-25T21:16:49.906Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "CreateCharacterLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:982081073415:function:pruebaTecnica3-dev-createCharacter:3",
        "Description": "Current Lambda function version",
        "ExportName": "sls-pruebaTecnica3-dev-CreateCharacterLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetCharactersLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:982081073415:function:pruebaTecnica3-dev-getCharacters:3",
        "Description": "Current Lambda function version",
        "ExportName": "sls-pruebaTecnica3-dev-GetCharactersLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetPersonajeSWAPILambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:982081073415:function:pruebaTecnica3-dev-getPersonajeSWAPI:3",
        "Description": "Current Lambda function version",
        "ExportName": "sls-pruebaTecnica3-dev-GetPersonajeSWAPILambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://4kmavcg8w4.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-pruebaTecnica3-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-b6d524f4-8955",
        "ExportName": "sls-pruebaTecnica3-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}